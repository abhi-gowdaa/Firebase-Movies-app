{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\rep\\\\15\\\\15\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\nconsole.log(process.env);\nfunction App() {\n  _s();\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const [movies, setMovies] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json'); // equal to = .then(response=>{ return response.json()})\n\n      if (!response.ok) {\n        //before parse json check this\n        throw new Error('something went wrong');\n      }\n      const data = await response.json(); //.then(data=>{})\n\n      // console.log(data)\n      const loadedMovies = [];\n      for (let key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      setMovies(loadedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n\n      body: JSON.stringify(movie) // body data type must match \"Content-Type\" header\n    });\n\n    const data = await response.json();\n    console.log(data.name);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 13\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }, this);\n  }\n  if (isloading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bR1U3Lk7iE08AMNNK1rHRFBRMAo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","AddMovie","MoviesList","useCallback","jsxDEV","_jsxDEV","require","config","console","log","process","env","App","_s","movies","setMovies","isloading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","message","addMovieHandler","movie","method","headers","body","JSON","stringify","name","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/rep/15/15/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useCallback } from 'react';\nrequire('dotenv').config()\nconsole.log(process.env)\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\nconst [movies,setMovies]=useState([])\nconst [isloading,setIsLoading]=useState(false)\nconst [error,setError]=useState(null)\n\n\nconst fetchMoviesHandler=useCallback(async()=>{\n  setIsLoading(true);\n  setError(null);\n\n  try{\n  const response= await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json') // equal to = .then(response=>{ return response.json()})\n \n  if(!response.ok){                               //before parse json check this\n    throw new Error('something went wrong');\n  }\n  const data=await response.json(); //.then(data=>{})\n  \n  // console.log(data)\nconst loadedMovies=[]\n\n\nfor(let key in data){\n  loadedMovies.push({\n    id:key,\n    title:data[key].title,\n    openingText:data[key].openingText,\n    releaseDate:data[key].releaseDate\n\n  })\n}\n    \n   setMovies(loadedMovies)\n  \n    setIsLoading(false)\n \n  }\ncatch(error){\n  setError(error.message)\n  console.log(error.message)\n }\n\n setIsLoading(false)\n\n},[])\n\nuseEffect(()=>{\n  fetchMoviesHandler()\n},[fetchMoviesHandler])\n\n\n\n\nasync function addMovieHandler(movie) {\n  const response=await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json',{\n    method:'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(movie), // body data type must match \"Content-Type\" header\n  });\n\nconst data=await response.json();\nconsole.log(data.name)\n\n  }\n\n \nlet content=<p>Found no Movies</p>\n\nif(movies.length>0){\ncontent=<MoviesList movies={movies} />\n\n}\n\n\nif(error){\n  content=<p>{error}</p>\n  \n}\n\nif(isloading){\n  content=<p>Loading...</p>\n  \n}\n\n  return (\n    <React.Fragment>\n        <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>   \n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}