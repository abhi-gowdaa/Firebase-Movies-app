{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\rep\\\\15\\\\15\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\n  const [movies, setMovies] = useState([]);\n  const [isloading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json'); // equal to = .then(response=>{ return response.json()})\n\n      if (!response.ok) {\n        //before parse json check this\n        throw new Error('something went wrong');\n      }\n      const data = await response.json(); //.then(data=>{})\n\n      const transformedMovies = data.results.map(moviesData => {\n        return {\n          id: moviesData.episode_id,\n          title: moviesData.title,\n          openingText: moviesData.opening_crawl,\n          releaseDate: moviesData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n      console.log(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n\n      body: JSON.stringify(movie) // body data type must match \"Content-Type\" header\n    });\n\n    console.log(response.json);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no Movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 13\n  }, this);\n  if (movies.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, this);\n  }\n  if (isloading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bR1U3Lk7iE08AMNNK1rHRFBRMAo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","AddMovie","MoviesList","useCallback","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isloading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","moviesData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","console","log","addMovieHandler","movie","method","headers","body","JSON","stringify","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onAddMovie","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/rep/15/15/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport AddMovie from './components/AddMovie';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { useCallback } from 'react';\n\nfunction App() {\n  // const dummyMovies = [\n  //   {\n  //     id: 1,\n  //     title: 'Some Dummy Movie',\n  //     openingText: 'This is the opening text of the movie',\n  //     releaseDate: '2021-05-18',\n  //   },\n  //   {\n  //     id: 2,\n  //     title: 'Some Dummy Movie 2',\n  //     openingText: 'This is the second opening text of the movie',\n  //     releaseDate: '2021-05-19',\n  //   },\n  // ];\n\nconst [movies,setMovies]=useState([])\nconst [isloading,setIsLoading]=useState(false)\nconst [error,setError]=useState(null)\n\n\nconst fetchMoviesHandler=useCallback(async()=>{\n  setIsLoading(true);\n  setError(null);\n\n  try{\n  const response= await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json') // equal to = .then(response=>{ return response.json()})\n \n  if(!response.ok){                               //before parse json check this\n    throw new Error('something went wrong');\n  }\n  const data=await response.json(); //.then(data=>{})\n  \n\n    const transformedMovies=data.results.map(moviesData=>{\n\n      return{\n        id:moviesData.episode_id,\n        title:moviesData.title,\n        openingText:moviesData.opening_crawl,\n        releaseDate:moviesData.release_date,\n\n      }\n    })\n\n   setMovies(transformedMovies)\n    setIsLoading(false)\n \n  }\ncatch(error){\n  setError(error.message)\n  console.log(error.message)\n }\n\n setIsLoading(false)\n\n},[])\nuseEffect(()=>{\n  fetchMoviesHandler()\n},[fetchMoviesHandler])\n\n\nasync function addMovieHandler(movie) {\n  const response=await fetch('https://movies-http-272cb-default-rtdb.firebaseio.com/movies.json',{\n    method:'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      // 'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: JSON.stringify(movie), // body data type must match \"Content-Type\" header\n  });\n\nconsole.log(response.json)\n\n  }\n\nlet content=<p>Found no Movies</p>\n\nif(movies.length>0){\ncontent=<MoviesList movies={movies} />\n\n}\n\nif(error){\n  content=<p>{error}</p>\n  \n}\n\nif(isloading){\n  content=<p>Loading...</p>\n  \n}\n\n  return (\n    <React.Fragment>\n        <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>   \n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}